<?php

/**
 * bjyauthorize route guards for reference
 *
   array('route' => 'audit', 'roles' => array('user')),
   array('route' => 'audit/page', 'roles' => array('user')),
   array('route' => 'audit/user', 'roles' => array('user')),
   array('route' => 'audit/revisions', 'roles' => array('user')),
   array('route' => 'audit/revision-entity', 'roles' => array('user')),
   array('route' => 'audit/entity', 'roles' => array('user')),
   array('route' => 'audit/compare', 'roles' => array('user')),
*/

return [
    'zf-doctrine-audit' => [
        // The object manager containing the entities to audit
        'target_object_manager' => 'doctrine.entitymanager.orm_default',

        // The object manager to audit with.  May be the same as target_object_manager
        'audit_object_manager' => 'doctrine.entitymanager.orm_zf_doctrine_audit',

        // If you use the same entity manager for the target and audit your table must
        // be named differently.  Suffix is strongly recommended over prefix.
        'audit_table_name_suffix' => '_audit',
        'audit_table_name_prefix' => '',

        // The epoch command line tool will import an existing database into an
        // empty audit database.  This setting controls how many entities are
        // imported per cycle.  If you run out of memory lower this value.
        // If memory is not a problem, to increase speed raise this value.
        'epoch_import_limit' => 200,

        /**
         * The user_entity_class_name is a string for the doctrine entity class
         * identifying a user in your application on the target_object_manager.
         *
         * This class MUST implement ZF\Doctrine\Audit\Entity\UserInterface.php
         */
        'user_entity_class_name' => 'Database\Entity\User',

        /**
         * The authentication service for fetching the user_entity_class_name
         */
        'authentication_service' => 'Zend\Authentication\AuthenticationService',

        /*
         * Entities to audit are specified as array keys

            'Db\Entity\song' => array(),

         * You may optionally specify a route to the data the entity audits

            'Db\Entity\Song' => array(
                'route' => 'default',
                'defaults' => array(
                    'controller' => 'song',
                    'action' => 'detail',
                ),
            ),

         * When using a route the entity keys will be appended to the default
         * to generate the target route.  These routes will be linked along-side
         * revision entitites so you can browse your application from audit.
         *
         * So if you have this route in your routing tables the id field will
         * populate from the entity keys to create a url using $view->url

            'default' => array(
                'type' => 'Zend\Mvc\Router\Http\Segment',
                'options' => array(
                    'route' => '/[:controller[/:action[/][:id]]]',
                    'constraints' => array(
                        'controller' => '[a-zA-Z][a-zA-Z0-9_-]*',
                        'action' => '[a-zA-Z][a-zA-Z0-9_-]*',
                    ),
                    'defaults' => array(
                        'controller' => 'index',
                        'action' => 'index',
                    ),
                ),

         */

        'entities' => []
    ],
];

